NUMERIC [0-9]
IDENTIFIER [a-zA-Z]*[0-9]*
%%
"end" {
    printf("-1\n");
    yyterminate();
} /* finish program */
{NUMERIC}+ {
    printf("0\n");
} /* integer value */
{NUMERIC}+"."{NUMERIC}* {
    printf("1\n");
} /* float value */
"if" {
    printf("2\n");
} /* reserved word */
"else" {
    printf("3\n");
}
"while" {
    printf("4\n");
}
"do" {
    printf("5\n");
}
"foreach" {
    printf("6\n");
}
"for" {
    printf("7\n");
}
"begin" {
    printf("8\n");
}
"int" {
    printf("9\n");
}
"float" {
    printf("10\n");
}
"boolean" {
    printf("11\n");
}
"procedure" {
    printf("12\n");
}
"var" {
    printf("13\n");
}
{IDENTIFIER} {
    printf("14\n");
}
"+" {
    printf("15\n");
}
"-" {
    printf("16\n");
}
"*" {
    printf("17\n");
}
"/" {
    printf("18\n");
}
"%" {
    printf("19\n");
}
":=" {
    printf("20\n");
}
"=" {
    printf("21\n");
}
"<" {
    printf("22\n");
}
">" {
    printf("23\n");
}
">=" {
    printf("24\n");
}
"<=" {
    printf("25\n");
}
"." {
    printf("26\n");
}
"," {
    printf("27\n");
}
":" {
    printf("28\n");
}
";" {
    printf("29\n");
}
"(" {
    printf("30\n");
}
")" {
    printf("31\n");
}
"{" {
    printf("32\n");
}
"}" {
    printf("33\n");
}
"{"[^}\n]*"}" /* removes comments */
[ \t\n]+ /* removes whitespaces, tab and space */
. printf("00\n");
%%
int main( argc, argv )
int argc;
char **argv;
{
++argv, --argc;
if ( argc > 0 )
    yyin = fopen( argv[0], "r+" );
else
    yyin = stdin;
yylex();
}
